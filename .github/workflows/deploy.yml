name: Deploy

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    branches:
      - main
  repository_dispatch:

jobs:
  build_and_deploy_worker:
    name: Deploy the worker
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load .env
        uses: xom9ikk/dotenv@v1.0.2
        with:
          path: .github

      - name: Create a directory for binary dependencies
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          target: wasm32-unknown-unknown

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: cargo-${{ runner.os }}-${{ runner.arch }}-${{ github.job }}-${{ hashFiles('Cargo.lock', 'Cargo.toml') }}

      - name: Rust cache
        uses: actions/cache@v3
        with:
          path: target
          key: target-${{ runner.os }}-${{ runner.arch }}-${{ env.RUST_VERSION }}-${{ github.job }}-${{ hashFiles('Cargo.lock', 'Cargo.toml') }}

      - name: Install worker-build
        run: |
            cargo install worker-build --version $WORKER_BUILD_VERSION

      - name: Install wasm-pack
        working-directory: ${{ github.workspace }}/bin
        run: |
          file_name="wasm-pack-v${WASM_PACK_VERSION}-x86_64-unknown-linux-musl"
          curl -fSsL https://github.com/rustwasm/wasm-pack/releases/download/v${WASM_PACK_VERSION}/${file_name}.tar.gz | tar --strip-components=1 -xzvf- "${file_name}/wasm-pack"

      - name: Install wasm-opt
        working-directory: ${{ github.workspace }}/bin
        run: |
          curl -fSsL https://github.com/WebAssembly/binaryen/releases/download/version_${BINARYEN_VERSION}/binaryen-version_${BINARYEN_VERSION}-x86_64-linux.tar.gz | tar --strip-components=2 -xzvf- binaryen-version_${BINARYEN_VERSION}/bin/wasm-opt
          chmod +x ./wasm-opt

      - name: Install cargo-nextest
        run: |
          curl -fSsL https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Run the tests
        run: |
          cargo nextest run

      - name: Build the worker
        run: |
          worker-build --release

      - name: Deploy the lindcraft worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: deploy --env=lindcraft

      - name: Deploy the kicraft worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: deploy --env=kicraft